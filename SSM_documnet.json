{
  "schemaVersion": "2.0",
  "description": "",
  "parameters": {
    "executionTimeout": {
      "description": "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800 (48 hours).",
      "default": "3600",
      "allowedPattern": "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)",
      "type": "String"
    },
    "workingDirectory": {
      "type": "String",
      "description": "The path to the working directory on your instance.",
      "maxChars": 4096
    },
    "s3Bucket": {
      "type": "String",
      "description": "S3 bucket name only",
      "maxChars": 4096
    },
    "region": {
      "type": "String",
      "description": "AWS Region to work on",
      "maxChars": 4096
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "runShellScript",
      "inputs": {
        "runCommand": [
          "#!/bin/bash -x ",
          "mkdir {{ workingDirectory }}/tmp",
          "aws s3 sync s3://{{ s3Bucket }}/sql-automation/ {{ workingDirectory }}/tmp/ --region {{ region }}",
          "if [ $? -eq 1 ]; then",
          "exit 1",
          "fi",
          "for i in $(find {{ workingDirectory }}/tmp/ -name \"*.sql\");do",
          "DB_ENDPOINT=$(echo $(xmllint myxml.xml --xpath \"/connection/host/text()\"))",
          "DB_USERNAME=$(echo $(xmllint myxml.xml --xpath \"/connection/username/text()\"))",
          "DB_PASSWORD=$(echo $(xmllint myxml.xml --xpath \"/connection/password/text()\"))",
          "DB_NAME=$(echo $(xmllint local.xml --xpath \"/connection/dbname/text()\"))",
          "mysql -h $DB_ENDPOINT -u $DB_USERNAME -p$DB_PASSWORD $DB_NAME <$i",
          "if [ $? -eq 1 ]; then",
          "exit 1",
          "fi",
          "done",
          "if [ $? -eq 0 ]; then",
          " echo \"SQL command executed successfully \"",
          " echo \"Deleting /tmp folder \"",
          "rm -rf {{ workingDirectory }}/tmp ",
          "fi"
        ],
        "workingDirectory": "{{ workingDirectory }}",
        "timeoutSeconds": "{{ executionTimeout }}"
      }
    }
  ]
}